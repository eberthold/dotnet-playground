// <auto-generated />
using System;
using EF_Core_Perf;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Core_Perf.Migrations
{
    [DbContext(typeof(HighwayDbContext))]
    [Migration("20230806195332_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("EF_Core_Perf.Entities.RestingAreaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Future")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subtitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoadId");

                    b.ToTable("RestingAreas");
                });

            modelBuilder.Entity("EF_Core_Perf.Entities.RestingAreaFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RestingAreaEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RestingAreaEntityId");

                    b.ToTable("RestingAreaFeature");
                });

            modelBuilder.Entity("EF_Core_Perf.Entities.RoadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roads");
                });

            modelBuilder.Entity("EF_Core_Perf.Entities.RestingAreaEntity", b =>
                {
                    b.HasOne("EF_Core_Perf.Entities.RoadEntity", "Road")
                        .WithMany("RestingAreas")
                        .HasForeignKey("RoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Road");
                });

            modelBuilder.Entity("EF_Core_Perf.Entities.RestingAreaFeature", b =>
                {
                    b.HasOne("EF_Core_Perf.Entities.RestingAreaEntity", null)
                        .WithMany("Features")
                        .HasForeignKey("RestingAreaEntityId");
                });

            modelBuilder.Entity("EF_Core_Perf.Entities.RestingAreaEntity", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("EF_Core_Perf.Entities.RoadEntity", b =>
                {
                    b.Navigation("RestingAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
